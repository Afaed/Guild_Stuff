"""
Project Euler Problems: https://projecteuler.net

Euler algorithms let you practice many skills:

* logic
* data structures
* problem solving

Practice, practice, practice!
"""


def euler1(n: int = 1000) -> int:
    """
    Multiples of 3 and 5

    If we list all the natural numbers below 10 that are multiples
    of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples
    is 23.

    Return the sum of all the multiples of 3 or 5 below n.

    >>> euler1(3)
    0
    >>> euler1(4)
    3
    >>> euler1(10)
    23
    >>> euler1(600)
    83700
    >>> euler1(-7)
    0
    """
    # your code here


def euler2(n: int = 4000000) -> int:
    """
    Even Fibonacci Numbers

    Each new term in the Fibonacci sequence is generated by adding
    the previous two terms. By starting with 1 and 2, the first 10
    terms will be:

    1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

    Return the sum of all even fibonacci sequence elements that are
    lower or equal to n.

    >>> euler2(10)
    10
    >>> euler2(15)
    10
    >>> euler2(2)
    2
    >>> euler2(1)
    0
    >>> euler2(34)
    44
    """


def euler3(n: int = 600851475143) -> int:
    """
    Largest prime factor

    The prime factors of 13195 are 5, 7, 13 and 29.

    Return the largest prime factor of a given number n.

    >>> euler3(13195)
    29
    >>> euler3(10)
    5
    >>> euler3(17)
    17
    >>> euler3(3.4)
    3
    >>> euler3(0)
    Traceback (most recent call last):
        ...
    ValueError: Parameter n must be greater than or equal to one.
    >>> euler3(-17)
    Traceback (most recent call last):
        ...
    ValueError: Parameter n must be greater than or equal to one.
    >>> euler3([])
    Traceback (most recent call last):
        ...
    TypeError: Parameter n must be int or castable to int.
    >>> euler3("asd")
    Traceback (most recent call last):
        ...
    TypeError: Parameter n must be int or castable to int.
    """
    # your code here


def euler4(n: int = 998001) -> int:
    """
    Largest palindrome product

    A palindromic number reads the same both ways. The largest
    palindrome made from the product of two 2-digit numbers is
    9009 = 91 Ã— 99.

    Return the largest palindrome made from the product of two 3-digit numbers which is less than n.

    >>> euler4(20000)
    19591
    >>> euler4(30000)
    29992
    >>> euler4(40000)
    39893
    >>> euler4(10000)
    Traceback (most recent call last):
    ...
    ValueError: That number is larger than our acceptable range.
    """


def euler5(n: int = 20) -> int:
    """
    Smallest multiple

    2520 is the smallest number that can be divided by each of the
    numbers from 1 to 10 without any remainder.

    Return the smallest positive number that is evenly divisible
    (divisible with no remainder) by all numbers from
    1 to n.

    >>> euler5(10)
    2520
    >>> euler5(15)
    360360
    >>> euler5(22)
    232792560
    >>> euler5(3.4)
    6
    >>> euler5(0)
    Traceback (most recent call last):
        ...
    ValueError: Parameter n must be greater than or equal to one.
    >>> euler5(-17)
    Traceback (most recent call last):
        ...
    ValueError: Parameter n must be greater than or equal to one.
    >>> euler5([])
    Traceback (most recent call last):
        ...
    TypeError: Parameter n must be int or castable to int.
    >>> euler5("asd")
    Traceback (most recent call last):
        ...
    TypeError: Parameter n must be int or castable to int.
    """
    # your code here
